{"version":3,"sources":["Events.js","LoginForm.js","chat/SideBar.js","chat/ChatHeading.js","Messages/Message.js","Messages/MessageInput.js","chat/ChatContainer.js","Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","_ref","user","isUser","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","_this2","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","ref","input","textInput","type","id","onChange","placeholder","Component","SideBar","_this$props","chats","setActiveChat","logout","onClick","refs","map","chat","name","lastMessage","messages","length","users","find","message","title","index_esm","ChatHeading","numberOfUsers","Messages","scrollDown","bind","assertThisInitialized","container","scrollTop","scrollHeight","prevProps","prevState","typingUsers","mes","key","concat","sender","time","MessageInput","sendMessage","sendTyping","lastUpdateTime","Date","now","isTyping","startCheckingTyping","console","log","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","ChatContainer","resetChat","addChat","reset","newChats","toConsumableArray","activeChat","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","chatId","push","includes","filter","u","SideBar_SideBar","Message_Messages","MessageInput_MessageInput","socketUrl","Layout","initSocket","io","ChatContainer_ChatContainer","LoginForm_LoginForm","App","Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b320aaa9.chunk.js","sourcesContent":["module.exports = {\r\n  COMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n  USER_CONNECTED:\"USER_CONNECTED\",\r\n  MESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n  MESSAGE_SENT:\"MESSAGE_SENT\",\r\n  USER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n  TYPING:\"TYPING\",\r\n  VERIFY_USER:\"VERIFY_USER\",\r\n  LOGOUT:\"LOGOUT\",\r\n}\r\n","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from './Events'\r\n\r\nexport default class LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\r\n\t  this.state = {\r\n\t  \tnickname:\"\",\r\n\t  \terror:\"\"\r\n\t  };\r\n\t}\r\n\r\n\tsetUser = ({user, isUser})=>{\r\n\r\n\t\tif(isUser){\r\n\t\t\tthis.setError(\"User name taken\")\r\n\t\t}else{\r\n\t\t\tthis.setError(\"\")\r\n\t\t\tthis.props.setUser(user)\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tconst { socket } = this.props\r\n\t\tconst { nickname } = this.state\r\n\t\tsocket.emit(VERIFY_USER, nickname, this.setUser)\r\n\t}\r\n\r\n\thandleChange = (e)=>{\r\n\t\tthis.setState({nickname:e.target.value})\r\n\t}\r\n\r\n\tsetError = (error)=>{\r\n\t\tthis.setState({error})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { nickname, error } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\" >\r\n\r\n\t\t\t\t\t<label htmlFor=\"nickname\">\r\n\t\t\t\t\t\t<h2>Pseudo</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={(input)=>{ this.textInput = input }}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder={'Ton pseudo ?'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"error\">{error ? error:null}</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport { IoIosLogOut} from \"react-icons/io\";\r\n\r\nexport default class SideBar extends Component{\r\n\r\n\trender(){\r\n\t\tconst { chats, user, setActiveChat, logout} = this.props\r\n\t\treturn (\r\n\t\t\t<div id=\"side-bar\">\r\n\t\t\t\t\t<div className=\"heading\">\r\n\t\t\t\t\t\t<div className=\"app-name\">MSN </div>\r\n\t\t\t\t\t\t<div className=\"menu\">\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"users\"\r\n\t\t\t\t\t\tref='users'\r\n\t\t\t\t\t\tonClick={(e)=>{ (e.target === this.refs.user) && setActiveChat(null) }}>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tchats.map((chat)=>{\r\n\t\t\t\t\t\t\tif(chat.name){\r\n\t\t\t\t\t\t\t\tconst lastMessage = chat.messages[chat.messages.length - 1];\r\n\t\t\t\t\t\t\t\tconst user = chat.users.find(({name})=>{\r\n\t\t\t\t\t\t\t\t\treturn name !== this.props.name\r\n\t\t\t\t\t\t\t\t}) || { name:\"ROOM 1\" }\r\n\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{user.name}</div>\r\n\t\t\t\t\t\t\t\t\t\t{lastMessage && <div className=\"last-message\">{lastMessage.message}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"current-user\">\r\n\t\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t\t\t<div onClick={()=>{logout()}} title=\"Logout\" className=\"logout\">\r\n                         <p id=\"monp\"> <IoIosLogOut /></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport default function({name, numberOfUsers}) {\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">MSN - CHAT -18</div>\r\n\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t<div className=\"indicator\"></div>\r\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"options\">\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\r\n\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\t}\r\n\r\n\tscrollDown(){\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessages.map((mes)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"moi\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\"> {mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} est entrain d'écrire . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\r\n\t  this.state = {\r\n\t  \tmessage:\"\",\r\n\t  \tisTyping:false\r\n\t  };\r\n\r\n\t}\r\n\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({message:\"\"})\r\n\t}\r\n\r\n\tsendMessage = ()=>{\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  this.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = ()=>{\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tstartCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Typing\");\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\tif((Date.now() - this.lastUpdateTime) > 300){\r\n\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\r\n\r\n\tstopCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Stop Typing\");\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form\r\n\t\t\t\t\tonSubmit={ this.handleSubmit }\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid = \"message\"\r\n\t\t\t\t\t\tref = {\"messageinput\"}\r\n\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\tclassName = \"form-control\"\r\n\t\t\t\t\t\tvalue = { message }\r\n\t\t\t\t\t\tautoComplete = {'off'}\r\n\t\t\t\t\t\tplaceholder = \"Tu peux écrire si tu  veux \"\r\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\r\n\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t({target})=>{\r\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled = { message.length < 1 }\r\n\t\t\t\t\t\ttype = \"submit\"\r\n\t\t\t\t\t\tclassName = \"send\"\r\n\r\n\t\t\t\t   > Send </button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport SideBar from './SideBar'\r\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED, TYPING } from '../Events'\r\nimport ChatHeading from './ChatHeading'\r\nimport Messages from '../Messages/Message'\r\nimport MessageInput from '../Messages/MessageInput'\r\n\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\r\n\t  this.state = {\r\n\t  \tchats:[],\r\n\t  \tactiveChat:null\r\n\t  };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t}\r\n\r\n\r\n\tresetChat = (chat)=>{\r\n\t\treturn this.addChat(chat, true)\r\n\t}\r\n\r\n\r\n\taddChat = (chat, reset)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tconst { chats } = this.state\r\n\r\n\t\tconst newChats = reset ? [chat] : [...chats, chat]\r\n\t\tthis.setState({chats:newChats, activeChat:reset ? chat : this.state.activeChat})\r\n\r\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n\t\tconst typingEvent = `${TYPING}-${chat.id}`\r\n\r\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id))\r\n\t}\r\n\r\n\r\n\taddMessageToChat = (chatId)=>{\r\n\t\treturn message => {\r\n\t\t\tconst { chats } = this.state\r\n\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\tif(chat.id === chatId)\r\n\t\t\t\t\tchat.messages.push(message)\r\n\t\t\t\treturn chat\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({chats:newChats})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tupdateTypingInChat = (chatId) =>{\r\n\t\treturn ({isTyping, user})=>{\r\n\t\t\tif(user !== this.props.user.name){\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\r\n\t\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\t\tif(chat.id === chatId){\r\n\t\t\t\t\t\tif(isTyping && !chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t}else if(!isTyping && chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({chats:newChats})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tsendMessage = (chatId, message)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(MESSAGE_SENT, {chatId, message} )\r\n\t}\r\n\r\n\tsendTyping = (chatId, isTyping)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(TYPING, {chatId, isTyping})\r\n\t}\r\n\r\n\tsetActiveChat = (activeChat)=>{\r\n\t\tthis.setState({activeChat})\r\n\t}\r\n\trender() {\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats, activeChat } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<SideBar\r\n\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\tchats={chats}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveChat !== null ? (\r\n\r\n\t\t\t\t\t\t\t<div className=\"chat-room\">\r\n\t\t\t\t\t\t\t\t<ChatHeading name={activeChat.name} />\r\n\t\t\t\t\t\t\t\t<Messages\r\n\t\t\t\t\t\t\t\t\tmessages={activeChat.messages}\r\n\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\ttypingUsers={activeChat.typingUsers}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MessageInput\r\n\t\t\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t\t\t(message)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t\t\t(isTyping)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t):\r\n\t\t\t\t\t\t<div className=\"chat-room choose\">\r\n\t\t\t\t\t\t\t<h3>Choose a chat!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client'\r\nimport { USER_CONNECTED, LOGOUT } from './Events'\r\nimport LoginForm from './LoginForm'\r\nimport ChatContainer from './chat/ChatContainer'\r\n\r\nconst socketUrl = \"http://10.20.1.6:3231/\"\r\nexport default class Layout extends Component {\r\n\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\r\n\t  this.state = {\r\n\t  \tsocket:null,\r\n\t  \tuser:null,\r\n\t  };\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.initSocket()\r\n\t}\r\n\r\n\r\n\tinitSocket = ()=>{\r\n\t\tconst socket = io(socketUrl)\r\n\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tconsole.log(\"Connected\");\r\n\t\t})\r\n\r\n\t\tthis.setState({socket})\r\n\t}\r\n\r\n\r\n\tsetUser = (user)=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(USER_CONNECTED, user);\r\n\t\tthis.setState({user})\r\n\t}\r\n\r\n\r\n\tlogout = ()=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(LOGOUT)\r\n\t\tthis.setState({user:null})\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { title } = this.props\r\n\t\tconst { socket, user } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{\r\n\t\t\t\t\t!user ?\r\n\t\t\t\t\t<LoginForm socket={socket} setUser={this.setUser} title={title} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ChatContainer socket={socket} user={user} logout={this.logout}/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, {Component} from 'react';\nimport Layout from './Layout';\nimport './App.css';\n\nclass App extends Component {\n  render (){\n    return(\n    <div className=\"container\">\n   <Layout title=\"Chat-2000\"/>\n    </div>\n);\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}